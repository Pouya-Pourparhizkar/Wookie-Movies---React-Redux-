{"version":3,"sources":["apis/wookieApi.tsx","actions/index.tsx","components/MovieList/MovieList.tsx","components/SearchBox/SearchBox.tsx","components/MovieDetail/MovieDetail.tsx","components/App/App.tsx","reducers/moviesReducer.tsx","reducers/genresReducer.tsx","reducers/searchTermReducer.tsx","reducers/index.tsx","index.tsx"],"names":["axios","create","baseURL","headers","Authorization","fetchMovies","dispatch","getStates","a","queryUrl","searchTerm","type","wookieApi","get","response","getGenres","data","movies","payload","_","union","map","selectMovie","id","list","MovieList","componentDidMount","props","openMovieDetail","e","stopPropagation","renderMovies","genre","filter","movie","genres","indexOf","className","onClick","src","backdrop","alt","title","renderGenres","length","genreIndex","this","isFetching","CircularProgress","React","Component","connect","state","Object","values","SearchBox","inputTimeoutId","onChange","applySearch","target","value","clearTimeout","setTimeout","TextField","style","width","label","selectedMovie","currentComponentRef","useRef","handleEscape","key","closeModal","handleClickOutside","current","contains","useEffect","document","addEventListener","removeEventListener","modalContainer","querySelector","ReactDom","createPortal","ref","poster","Rating","name","disabled","imdb_rating","Date","released_on","getFullYear","director","cast","join","overview","initialState","moviesReducer","action","mapKeys","genresReducer","searchTermReducer","combineReducers","genresReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render"],"mappings":"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","file":"static/js/main.b77e651b.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n  baseURL: `https://wookie.codesubmit.io`,\r\n  headers: {\r\n    Authorization: \"Bearer Wookie2019\",\r\n  },\r\n});\r\n","import wookieApi from \"../apis/wookieApi\";\r\nimport _ from \"lodash\";\r\n\r\nexport const fetchMovies = () => {\r\n  return async (dispatch: any, getStates: any) => {\r\n    let queryUrl = \"/movies\";\r\n    if (getStates().searchTerm) {\r\n      queryUrl = `/movies?q=${getStates().searchTerm}`;\r\n    }\r\n\r\n    dispatch({ type: \"START_FETCHING\" });\r\n\r\n    const response = await wookieApi.get(queryUrl);\r\n\r\n    dispatch(getGenres(response.data.movies));\r\n\r\n    dispatch({\r\n      type: \"FETCH_MOVIES\",\r\n      payload: response.data.movies,\r\n    });\r\n  };\r\n};\r\n\r\nexport const getGenres = (movies: Array<any>) => {\r\n  let genres = _.union(..._.map(movies, \"genres\"));\r\n  return {\r\n    type: \"GET_GENRES\",\r\n    payload: genres,\r\n  };\r\n};\r\n\r\nexport const applySearch = (searchTerm: string) => {\r\n  return {\r\n    type: \"APPLY_SEARCH\",\r\n    payload: searchTerm,\r\n  };\r\n};\r\n\r\nexport const selectMovie = (id: string) => {\r\n  return async (dispatch: any, getStates: any) => {\r\n    dispatch({\r\n      type: \"SELECT_MOVIE\",\r\n      payload: getStates().movies.list[id],\r\n    });\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchMovies, selectMovie } from \"../../actions\";\r\nimport \"./MovieList.css\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\ninterface IMovieListProps {\r\n  movies?: Array<any>;\r\n  genres?: Array<string>;\r\n  isFetching: boolean;\r\n  fetchMovies: any;\r\n  selectMovie: any;\r\n}\r\n\r\nclass MovieList extends React.Component<IMovieListProps> {\r\n  componentDidMount = () => {\r\n    this.props.fetchMovies();\r\n  };\r\n\r\n  openMovieDetail = (id: string) => (e: any) => {\r\n    e.stopPropagation();\r\n    this.props.selectMovie(id);\r\n  };\r\n\r\n  renderMovies = (movies: Array<any> = [], genre: string) => {\r\n    return movies\r\n      .filter((movie) => {\r\n        return movie.genres.indexOf(genre) !== -1;\r\n      })\r\n      .map((movie) => {\r\n        return (\r\n          <div\r\n            key={genre + movie.id}\r\n            className=\"imageContainer\"\r\n            onClick={this.openMovieDetail(movie.id)}\r\n          >\r\n            <img\r\n              src={movie.backdrop}\r\n              alt={movie.title}\r\n              className=\"movieImage\"\r\n            />\r\n          </div>\r\n        );\r\n      });\r\n  };\r\n\r\n  renderGenres = () => {\r\n    const movies = this.props.movies;\r\n    const genres = this.props.genres;\r\n\r\n    if (movies && genres && movies.length) {\r\n      return genres.map((genre, genreIndex) => {\r\n        return (\r\n          <div key={genreIndex} className=\"genreContainer\">\r\n            <div className=\"genreTitle\">{genre}</div>\r\n            <hr />\r\n            <div className=\"moviesContainer\">\r\n              {this.renderMovies(movies, genre)}\r\n            </div>\r\n          </div>\r\n        );\r\n      });\r\n    }\r\n\r\n    return <div className=\"NoResultContainer\">No Result Found!</div>;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"movieListContainer\">\r\n        {this.props.isFetching ? (\r\n          <div className=\"isfetchingContainer\">\r\n            <CircularProgress />\r\n          </div>\r\n        ) : (\r\n          this.renderGenres()\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStatesToProps = (state: any) => {\r\n  return {\r\n    movies: Object.values(state.movies.list),\r\n    genres: state.genres,\r\n    isFetching: state.movies.isFetching,\r\n  };\r\n};\r\n\r\nexport default connect(mapStatesToProps, { fetchMovies, selectMovie })(\r\n  MovieList\r\n);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { applySearch, fetchMovies } from \"../../actions\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport \"./SearchBox.css\";\r\n\r\ninterface ISearxchBoxProps {\r\n  searchTerm: string;\r\n  applySearch: any;\r\n  fetchMovies: any;\r\n}\r\n\r\nclass SearchBox extends React.Component<ISearxchBoxProps> {\r\n  inputTimeoutId: any = 0;\r\n\r\n  onChange = (e: any) => {\r\n    this.props.applySearch(e.target.value);\r\n    clearTimeout(this.inputTimeoutId);\r\n    this.inputTimeoutId = setTimeout(() => {\r\n      this.props.fetchMovies();\r\n    }, 500);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"searchBoxContainer\">\r\n        <div className=\"applicationNameContainer\">\r\n          <h2>\r\n            WOOKIE\r\n            <br />\r\n            MOVIES\r\n          </h2>\r\n        </div>\r\n        <div className=\"inputContainer\">\r\n          <TextField\r\n            value={this.props.searchTerm}\r\n            onChange={this.onChange}\r\n            style={{ width: \"300px\" }}\r\n            label=\"Search\"\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStatesToProps = (state: any) => {\r\n  return { searchTerm: state.searchTerm };\r\n};\r\n\r\nexport default connect(mapStatesToProps, { applySearch, fetchMovies })(\r\n  SearchBox\r\n);\r\n","import { useEffect, useRef } from \"react\";\r\nimport ReactDom from \"react-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { selectMovie } from \"../../actions\";\r\nimport Rating from \"@material-ui/lab/Rating\";\r\nimport HighlightOffTwoToneIcon from \"@material-ui/icons/HighlightOffTwoTone\";\r\nimport \"./MovieDetail.css\";\r\n\r\nconst MovieDetail = (props: any) => {\r\n  const currentComponentRef = useRef() as React.MutableRefObject<HTMLInputElement>;\r\n\r\n  const handleEscape = (e: any) => {\r\n    if (e.key === \"Escape\") {\r\n      closeModal();\r\n    }\r\n  };\r\n\r\n  const handleClickOutside = (e: any) => {\r\n    if (!currentComponentRef.current.contains(e.target)) {\r\n      closeModal();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.addEventListener(\"keydown\", handleEscape);\r\n    document.addEventListener(\"click\", handleClickOutside);\r\n\r\n    return () => {\r\n      document.removeEventListener(\"keydown\", handleEscape);\r\n      document.removeEventListener(\"click\", handleClickOutside);\r\n    };\r\n  }, []);\r\n\r\n  const closeModal = () => {\r\n    props.selectMovie(null);\r\n  };\r\n\r\n  const modalContainer = document.querySelector(\"#modal\");\r\n  return modalContainer\r\n    ? ReactDom.createPortal(\r\n        <div className=\"movieDetailContainer\" ref={currentComponentRef}>\r\n          <div className=\"detailContainer\">\r\n            <div className=\"imageContainer\">\r\n              <img\r\n                className=\"poster\"\r\n                alt={props.selectedMovie.title}\r\n                src={props.selectedMovie.poster}\r\n              />\r\n            </div>\r\n            <div className=\"movieInformationContainer\">\r\n              <div>\r\n                <div className=\"starRateContainer\">\r\n                  <Rating\r\n                    name=\"disabled\"\r\n                    disabled\r\n                    value={props.selectedMovie.imdb_rating / 2}\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <div className=\"titleContainer\">\r\n                    {props.selectedMovie.title}\r\n                  </div>\r\n                  &nbsp;\r\n                  <div className=\"ratingContainer\">\r\n                    ({props.selectedMovie.imdb_rating}/10)\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"directorContainer\">\r\n                {new Date(props.selectedMovie.released_on).getFullYear()} |{\" \"}\r\n                {props.selectedMovie.length} | {props.selectedMovie.director}\r\n              </div>\r\n              <div className=\"castsContainer\">\r\n                <b>Cast: {props.selectedMovie.cast.join(\", \")}</b>\r\n              </div>\r\n              <div className=\"overViewContainer\">\r\n                {props.selectedMovie.overview}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"closeButtonContainer\">\r\n            <HighlightOffTwoToneIcon onClick={closeModal} />\r\n          </div>\r\n        </div>,\r\n        modalContainer\r\n      )\r\n    : null;\r\n};\r\n\r\nconst mapStatesToProps = (state: any) => {\r\n  return { selectedMovie: state.movies.selectedMovie };\r\n};\r\n\r\nexport default connect(mapStatesToProps, { selectMovie })(MovieDetail);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport MovieList from \"../MovieList/MovieList\";\r\nimport SearchBox from \"../SearchBox/SearchBox\";\r\nimport MovieDetail from \"../MovieDetail/MovieDetail\";\r\nimport \"./App.css\";\r\n\r\nconst App = (props: any) => {\r\n  return (\r\n    <div className=\"appContainer\">\r\n      <SearchBox />\r\n      <MovieList />\r\n      {props.selectedMovie && <MovieDetail />}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStatesToProps = (state: any) => {\r\n  return { selectedMovie: state.movies.selectedMovie };\r\n};\r\n\r\nexport default connect(mapStatesToProps)(App);\r\n","import _ from \"lodash\";\r\n\r\nconst initialState = {\r\n  list: {},\r\n  selectedMovie: null,\r\n  isFetching: false,\r\n};\r\n\r\nconst moviesReducer = (state = initialState, action: any) => {\r\n  switch (action.type) {\r\n    case \"FETCH_MOVIES\":\r\n      return {\r\n        ...state,\r\n        list: { ..._.mapKeys(action.payload, \"id\") },\r\n        isFetching: false,\r\n      };\r\n    case \"SELECT_MOVIE\":\r\n      return { ...state, selectedMovie: action.payload };\r\n    case \"START_FETCHING\":\r\n      return { ...state, isFetching: true };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default moviesReducer;\r\n","const genresReducer = (state = [], action: any) => {\r\n  switch (action.type) {\r\n    case \"GET_GENRES\":\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default genresReducer;\r\n","const searchTermReducer = (state = \"\", action: any) => {\r\n  switch (action.type) {\r\n    case \"APPLY_SEARCH\":\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default searchTermReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport moviesReducer from \"./moviesReducer\";\r\nimport genresReducers from \"./genresReducer\";\r\nimport searchTermReducer from \"./searchTermReducer\";\r\n\r\nexport default combineReducers({\r\n  movies: moviesReducer,\r\n  genres: genresReducers,\r\n  searchTerm: searchTermReducer,\r\n});\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport App from \"./components/App/App\";\r\nimport reducers from \"./reducers\";\r\n\r\ndeclare global {\r\n  interface Window {\r\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__: any;\r\n  }\r\n}\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunk)));\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.querySelector(\"#root\")\r\n);\r\n"],"sourceRoot":""}